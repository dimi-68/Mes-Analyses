---
title: "Les taux standardisés"
format: 
    html:
     self-contained: true
editor: visual
lang: fr
---

#### Importation des packages

```{r}
pacman::p_load(
     rio, # importer/exporter des données
     here, # localisation des fichiers
     tidyverse, # gestion et visualisation des données
     stringr, # nettoyage des caractères et des chaînes de caractères
     frailtypack, # nécessaire pour dsr, pour les modèles de frailty
     dsr, # standardiser les taux
     PHEindicatormethods) # alternative pour la standardisation des taux

```

#### Importation des données des populations depuis GITHUB

```{r}
# importer les données démographiques du pays A directement depuis Github
A_demo <- import("https://github.com/epirhandbook/Epi_R_handbook/raw/master/data/standardization/country_demographics.csv") %>% 
  mutate( Country = "A")

# importer les décès pour le pays A directement depuis Github
A_deaths <- import("https://github.com/epirhandbook/Epi_R_handbook/raw/master/data/standardization/deaths_countryA.csv")


# Importez les données démographiques pour le pays B directement depuis Github.
B_demo <- import("https://github.com/epirhandbook/Epi_R_handbook/raw/master/data/standardization/country_demographics_2.csv") %>% 
  mutate( Country = "B")

# importer les décès pour le pays B directement depuis Github.
B_deaths <- import("https://github.com/epirhandbook/Epi_R_handbook/raw/master/data/standardization/deaths_countryB.csv")

# Importez les données démographiques pour le pays B directement depuis Github.
standard_pop_data <- import("https://github.com/epirhandbook/Epi_R_handbook/raw/master/data/standardization/world_standard_population_by_sex.csv")
```

### Utilisation du package  dsr

#### Combinaison des jeux de données des populations à comparer

```{r}
pop_countries <- A_demo %>% # Commencez avec l'ensemble de données du pays A
     bind_rows(B_demo) %>% # lier les lignes, car les colonnes portent le même nom
     pivot_longer( # pivot plus long
          cols = c(m, f), # colonnes à combiner en une seule
          names_to = "Sex", # nom de la nouvelle colonne contenant la catégorie ("m" ou "f") 
          values_to = "Population") %>% # nom de la nouvelle colonne contenant les valeurs numériques pivotées
     mutate(Sex = recode(Sex, # re-code les valeurs pour plus de clarté
          "m" = "Male",
          "f" = "Female")) %>% 
  mutate(age_cat5 = str_replace_all( age_cat5 , "\\+", ""))
  
```

#### Combinaison des données de  mortalité des populations à comparer

```{r}
deaths_countries <- A_deaths %>% # Commencez avec l'ensemble de données des décès du pays A
     bind_rows(B_deaths) %>% # lier les lignes avec l'ensemble de données B, parce que les colonnes sont nommées de manière identique
     pivot_longer( # pivot plus long
          cols = c(Male, Female), # colonne à transformer en une seule
          names_to = "Sex", # nom de la nouvelle colonne contenant la catégorie ("m" ou "f") 
          values_to = "Deaths") %>% # nom pour la nouvelle colonne contenant les valeurs numériques pivotées
     rename(age_cat5 = AgeCat) # renomme pour plus de clarté
```

#### combinaisons des données des populations et des données sur la mortalité

```{r}
country_data <- pop_countries %>% 
     left_join(deaths_countries, by = c("Country", "age_cat5", "Sex"))

country_data <- country_data %>% 
  mutate(
    Country = fct_relevel(Country, "A", "B"),
      
    Sex = fct_relevel(Sex, "Male", "Female"),
        
    age_cat5 = fct_relevel(
      age_cat5,
      "0-4", "5-9", "10-14", "15-19",
      "20-24", "25-29",  "30-34", "35-39",
      "40-44", "45-49", "50-54", "55-59",
      "60-64", "65-69", "70-74",
      "75-79", "80-84", "85")) %>% 
          
  arrange(Country, age_cat5, Sex)
#rm(A_demo, B_demo, A_deaths,B_deaths, deaths_countries, pop_countries)
```

#### Nettoyage de la population de référence

```{r}
# Suppression d'une chaîne spécifique des valeurs de la colonne
standard_pop_clean <- standard_pop_data %>%
     mutate(
          AgeGroup = str_replace_all(AgeGroup, "years", ""), # supprime "year" (année)
          AgeGroup = str_replace_all(AgeGroup, "plus", ""), # supprimez "plus".
          AgeGroup = str_replace_all(AgeGroup, " ", "")) %>% # supprime l'espace " ".
     
     rename(pop = WorldStandardPopulation) %>%# change le nom de la colonne en "pop", car cela est attendu par le paquet dsr
  rename( age_cat5 = AgeGroup)

```

#### Creaction d'un jeu de donnée avec le populations standard

```{r}
all_data <- left_join(country_data, standard_pop_clean, by=c("age_cat5", "Sex"))
```

#### Calcul des taux de mortalité standardisés

```{r}
# Calculez les taux par pays directement standardisés pour l'âge et le sexe
mortality_rate <- dsr::dsr(
     data = country_data, # spécifier l'objet contenant le nombre de décès par strate
     event = Deaths, # colonne contenant le nombre de décès par strate 
     fu = Population, # colonne contenant le nombre de population par strate
     subgroup = Country, # unités que nous souhaitons comparer
     age_cat5, # autres colonnes - les taux seront standardisés par celles-ci
     Sex,
     refdata = standard_pop_clean, # cadre de données de la population de référence, avec une colonne appelée "pop".
     method = "gamma", # méthode pour calculer l'IC à 95%.
     sig = 0,95, # niveau de signification
     mp = 100000, # nous voulons les taux pour 100.000 habitants
     decimals = 2) # nombre de décimales)
```

```{r}
# Imprimez la sortie sous la forme d'un joli tableau HTML
knitr::kable(mortality_rate) # Afficher le taux de mortalité avant et après la standardisation directe
```

Ci-dessus, nous voyons que même si le pays A avait un taux de mortalité brut plus faible que le pays B, il a un taux standardisé plus élevé après standardisation directe par âge et par sexe.

#### Calcul du ratio de mortalité standardisé

```{r}
# Calculer le RR
mortality_rr <- dsr::dsrr(
     data = country_data, # spécifier l'objet contenant le nombre de décès par strate
     event = Deaths, # colonne contenant le nombre de décès par strate 
     fu = Population, # colonne contenant le nombre de population par strate
     subgroup = Country, # unités que nous souhaitons comparer
     age_cat5,
     Sex, # caractéristiques sur lesquelles nous aimerions nous standardiser 
     refdata = standard_pop_clean, # population de référence, avec des chiffres dans la colonne appelée pop
     refgroup = "B", # référence pour la comparaison
     estimate = "ratio", # type d'estimation
     sig = 0.95, # niveau de signification
     mp = 100000, # nous voulons des taux pour 100.000 habitants
     decimals = 2) # nombre de décimales

# Imprimer le tableau
knitr::kable(mortality_rr) 
```

Le taux de mortalité standardisé est 1,22 fois plus élevé dans le pays A que dans le pays B (IC 95 % 1.17-1.27).

#### Calcul des  differences des taux de mortalité standardisés

```{r}
# Calculer RD
mortality_rd <- dsr::dsrr(
     data = country_data, # spécifier l'objet contenant le nombre de décès par strate
     event = Deaths, # colonne contenant le nombre de décès par strate 
     fu = Population, # colonne contenant le nombre de population par strate
     subgroup = Country, # unités que nous souhaitons comparer
     age_cat5, # caractéristiques sur lesquelles nous voulons nous standardiser
     Sex,                        
     refdata = standard_pop_clean, # population de référence, avec des chiffres dans la colonne appelée pop
     refgroup = "B", # référence pour la comparaison
     estimate = "difference", # type d'estimation
     sig = 0.95, # niveau de signification
     mp = 100000, # nous voulons des taux pour 100.000 habitants
     decimals = 2) # nombre de décimales

# Imprimer le tableau
knitr::kable(mortality_rd) 
```

Le pays A a 4.24 décès supplémentaires pour 100.000 habitants (IC 95% 3.24-5.24) par rapport au pays A.

### Utilisation du package **PHEindicatormethods**

#### Taux directement standardisé

```{r}
# Calculez les taux par pays directement normalisés pour l'âge et le sexe.
mortality_ds_rate_phe <- all_data %>%
     group_by(Country) %>%
     PHEindicatormethods::phe_dsr(
          x = Deaths, # colonne avec le nombre d'événements observés
          n = Population, # colonne avec les pops non standard pour chaque strate
          stdpop = pop, # populations standard pour chaque strate
          stdpoptype = "field")       # soit "vector" pour un vecteur autonome, soit "field" pour signifier que les populations std sont dans les données.  

# Imprimer le tableau
knitr::kable(mortality_ds_rate_phe)
```

#### Taux indirectement standardisé

```{r}
# Créez la population de référence
refpopCountryB <- country_data %>% 
  filter(Country == "B") 

# Calculer les taux pour le pays A indirectement standardisés par âge et sexe
mortality_is_rate_phe_A <- country_data %>%
     filter(Country == "A") %>%
     PHEindicatormethods::calculate_ISRate( #avant c'etait phe_isr()
          x = Deaths, # colonne avec le nombre d'événements observés
          n = Population, # colonne avec les pops non standard pour chaque strate
          x_ref = refpopCountryB$Deaths, # nombre de décès de référence pour chaque strate
          n_ref = refpopCountryB$Population) # population de référence pour chaque strate

# Imprimez le tableau
knitr::kable(mortality_is_rate_phe_A)
```
